name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libusb-1.0-0-dev \
          cmake \
          build-essential \
          libxmu-dev \
          libxi-dev \
          libgl1-mesa-dev \
          libglu1-mesa-dev \
          libxrandr-dev \
          libxinerama-dev \
          libxcursor-dev
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,test]"
    
    - name: Lint with flake8
      run: |
        flake8 pi_kinect/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 pi_kinect/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Check code formatting with black
      run: |
        black --check pi_kinect/ tests/
    
    - name: Check import sorting with isort
      run: |
        isort --check-only pi_kinect/ tests/
    
    - name: Type check with mypy
      run: |
        mypy pi_kinect/ --ignore-missing-imports
    
    - name: Security check with bandit
      run: |
        bandit -r pi_kinect/ -f json -o bandit-report.json || true
        bandit -r pi_kinect/
    
    - name: Test freenect import (dry run)
      run: |
        python -c "
        try:
            import freenect
            print('✅ freenect import successful')
        except ImportError:
            print('⚠️ freenect not available (expected in CI)')
        except Exception as e:
            print(f'⚠️ freenect import error: {e}')
        "
    
    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=pi_kinect --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check package
      run: |
        twine check dist/*
