[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pi-kinect"
version = "1.0.0"
description = "Raspberry Pi Kinect streaming solution with automatic device detection"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Pi-Kinect Team", email = "team@pi-kinect.dev"}
]
maintainers = [
    {name = "Pi-Kinect Team", email = "team@pi-kinect.dev"}
]
keywords = ["kinect", "raspberry-pi", "streaming", "opencv", "freenect", "camera"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Multimedia :: Graphics :: Capture :: Video",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "opencv-python>=4.5.0,<5.0.0",
    "numpy>=1.19.0,<2.0.0",
    "pillow>=8.0.0,<11.0.0",
    "requests>=2.25.0,<3.0.0",
    "pyyaml>=5.4.0,<7.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0",
    "black>=21.0.0",
    "isort>=5.0.0",
    "flake8>=3.8.0",
    "mypy>=0.910",
    "bandit>=1.6.0",
    "pre-commit>=2.15.0",
]
test = [
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0",
    "pytest-mock>=3.6.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.15.0",
]

[project.urls]
Homepage = "https://github.com/ls174-design/pi-kinect"
Documentation = "https://pi-kinect.readthedocs.io"
Repository = "https://github.com/ls174-design/pi-kinect.git"
Issues = "https://github.com/ls174-design/pi-kinect/issues"
Changelog = "https://github.com/ls174-design/pi-kinect/blob/main/CHANGELOG.md"

[project.scripts]
pi-kinect = "pi_kinect.cli:main"
pi-kinect-probe = "pi_kinect.cli:probe_devices"
pi-kinect-stream = "pi_kinect.cli:start_streaming"
pi-kinect-viewer = "pi_kinect.cli:start_viewer"

[tool.setuptools.packages.find]
where = ["."]
include = ["pi_kinect*"]

[tool.setuptools.package-data]
pi_kinect = ["config/*.yaml", "*.yaml"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["pi_kinect"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cv2.*",
    "freenect.*",
    "yaml.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "hardware: marks tests that require hardware (Kinect, camera)",
]

# Coverage configuration
[tool.coverage.run]
source = ["pi_kinect"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Bandit configuration
[tool.bandit]
exclude_dirs = ["tests", "test_*"]
skips = ["B101", "B601"]
